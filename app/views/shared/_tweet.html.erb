<%-
  # Prepare a tweet. This form works mostly but not exclusively on virtual attributes.
  #
  # By editing message and bounty the user edits the "tweet" entry. When submitting the
  # form the controller saves the bounty in the quest and sends a tweet with the :tweet
  # message and the quest url.
  #
  # Parameters for this partial:
  # - +quest+: the Quest object.
  # - +retweet+: when set, this is a retweet. That means that the user cannot change
  #   the bounty value or the run time.
  
  retweet = false if !defined?(retweet)
  url     = retweet ? share_url(quest) : run_url(quest)
  tweet_url = quest_url(quest)
  bounty  = quest.bounty.to_s(:currency => false, :thousands_separators => false, :cents => false)
-%>

<%= form_for(quest, :remote => true, :url => url) do |form| %>
  <% modal_body do %>
    <p><%= I18n.t("quest.form.#{retweet ? 'share' : 'start'}.legend") %></p>
    <%= form.error_messages %>

    <% if retweet %>
      <%= form.control_group :bounty, :hidden_field, :value => bounty %>
    <% else %>
      <%= form.control_group :bounty, :class => "input-mini", :unit => "&euro;", :value => bounty, :autocomplete => "off" %>
    <% end %>

    <% unless retweet %>
      <%= form.control_group :duration_in_days, :radio_button, :hint => false do
          Quest::DURATIONS_IN_DAYS.map do |value|
            label :class => "radio inline" do
              form.radio_button(:duration_in_days, value, :checked => ((quest.duration_in_days || 7) == value)) +
              I18n.t('quest.form.field_hint.duration', :count => value)
            end
          end.join.html_safe
      end %>
    <% end %>
    
    <%= form.control_group :message, :text_area, :rows => 3, :value => quest.title, :hint => false %>
    
    <% unless retweet %>
      <div id="location_fields" class="hide">
        <%= form.control_group :location, :text_field %>
        <%= form.location_map("quest_location") %>
      </div>
      <%= form.restrict_location %>
    <% end %>

    <div class="tweet-container">
      <%= form.control_group :tweet, :hidden_field %>
      <%= avatar current_user, :size => 48 %>
      <div id="tweet">
        <span class="preview"><%= link_to tweet_url, tweet_url, :target => "_blank" %></span>
        <span><%= link_to tweet_url, tweet_url, :target => "_blank" %></span>
      </div>
    </div>
  <% end %>

  <% modal_footer do
    form.actions "#", :"data-dismiss" => "modal", :label => I18n.t("button.#{retweet ? 'share' : 'start'}"), :class => "btn btn-primary"
  end %>
  
<% end %>

<script type="text/javascript" charset="utf-8">

// toggles location restriction
$("#restrict_location").change(function() {
  $("#location_fields").toggleClass('hide');
});
<% if quest.location.present? %>
  $("#restrict_location").trigger('click');
<% end %>

(function($) {
  
  var node_bounty   = $("#quest_bounty"),
    node_message    = $("#quest_message"),
    node_form_tweet = $("#quest_tweet");
    node_tweet      = $("#tweet span.preview");
    
  function update_message() {
    // This is a rough JS re-implementation of Quest#message
    
    // Build a message to write into the form
    var message = jQuery.escapeHTML(node_message.val());
    if(message.length > 99)
      message = message.substr(0, 99) + "…";
    message = message + " #bounty";
    var bounty = node_bounty.val();
    if(parseInt(bounty) > 0)
      message = message + " €" + parseInt(bounty);

    node_form_tweet.val(message);
    node_tweet.html(message);
  }
  
  node_bounty.change(update_message).keyup(update_message);
  node_message.change(update_message).keyup(update_message);

  update_message();
})(jQuery);
</script>
